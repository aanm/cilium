{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:base",
    ":gitSignOff",
    "helpers:pinGitHubActionDigests",
    "config:best-practices"
  ],
  // This ensures that the gitAuthor and gitSignOff fields match
  "gitAuthor": "renovate[bot] <bot@renovateapp.com>",
  "includePaths": [
    ".github/actions/kvstore/**",
    ".github/actions/ginkgo/**",
    ".github/actions/lvh-kind/**",
    ".github/actions/set-env-variables/action.yml",
    ".github/workflows/**",
    ".github/kind-config.yaml",
    ".github/kind-config-ipv6.yaml",
    "images/**",
    "examples/hubble/*",
    "go.mod",
    "go.sum",
    "Makefile.defs",
    ".travis.yml",
    "test/kubernetes-test.sh",
    "test/packet/scripts/install.sh",
    "install/kubernetes/cilium/templates/spire/**",
    "install/kubernetes/cilium/values.yaml.tmpl",
  ],
  "schedule": [
    "on monday"
  ],
  postUpdateOptions: [
    "gomodTidy"
  ],
  // This ignorePaths configuration option overrides the config:base preset and
  // should not be removed.
  // If removed, we would fall back on the config:base preset, which ignores any
  // paths that match 'examples/*' (which we explicitly do not want to ignore).
  "ignorePaths": [
    // This file is deprecated and no longer present in main
    "images/cilium-test/Dockerfile"
  ],
  "ignoreDeps": [
    // 'google/oss-fuzz' is ignored from the updates because it's currently
    // unversioned and it would be receiving an update every time the upstream
    // repository would receive a new commit.
    "google/oss-fuzz"
  ],
  "pinDigests": true,
  "ignorePresets": [":prHourlyLimit2"],
  "pruneStaleBranches": true,
  "baseBranches": [
    "main",
    "v1.15",
    "v1.14",
    "v1.13",
    "v1.12"
  ],
  "vulnerabilityAlerts": {
    "enabled": true
  },
  "labels": [
    "renovate/stop-updating",
    "kind/enhancement",
    "release-note/misc"
  ],
  "stopUpdatingLabel": "renovate/stop-updating",
  "kubernetes": {
    "fileMatch": [
      "examples/hubble/hubble-cli\\.yaml"
    ]
  },
  "regexManagers": [
    {
      "fileMatch": [
        "images/cilium/download-hubble\\.sh",
        "images/runtime/build-gops.sh",
        "images/hubble-relay/download-grpc-health-probe.sh"
      ],
      // These regexes manage version and digest strings in shell scripts,
      // similar to the examples shown here:
      //   https://docs.renovatebot.com/modules/manager/regex/#advanced-capture
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+.+_version=\"(?<currentValue>.*)\"",
        // The digestVersion in this regex is required for Renovate to be able
        // to match the digest to the pinned version. It will not work without it.
        // Note that for GitHub release artifact digests, you likely want to use
        // github-release-attachments as the datasource here.
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?) digestVersion=(?<currentValue>.*)\\s+.+_sha256.*=\"(?<currentDigest>.*)\""
      ]
    },
    {
      "fileMatch": [
        "^\\.github/workflows/[^/]+\\.ya?ml$",
        "^\\.github/actions/ginkgo/[^/]+\\.ya?ml$"
      ],
      // This regex manages version strings in GitHub actions workflow files,
      // similar to the examples shown here:
      //   https://docs.renovatebot.com/modules/manager/regex/#advanced-capture
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+.+version: (?<currentValue>.*)",
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+.+_VERSION: (?<currentValue>.*)",
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+.+kernel: '(?<currentValue>.*)'",
        '# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*)\\s+.+kernel: "(?<currentValue>.*)@(?<currentDigest>sha256:[a-f0-9]+)"',
        '# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*)\\s+.+image-version: "(?<currentValue>.*)@(?<currentDigest>sha256:[a-f0-9]+)"',
        '# renovate: datasource=(?<datasource>.*?)\\s+.+kube-image: "(?<depName>.*):(?<currentValue>.*)@(?<currentDigest>sha256:[a-f0-9]+)"'
      ]
    },
    {
      "fileMatch": [
        "^Makefile\\.defs$"
      ],
      // This regex manages version strings in the Makefile.defs file,
      // similar to the examples shown here:
      //   https://docs.renovatebot.com/modules/manager/regex/#advanced-capture
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+.+_VERSION = (?<currentValue>.*)\\s+.+_SHA = (?<currentDigest>sha256:[a-f0-9]+)"
      ]
    },
    {
      "fileMatch": [
        "^\\.travis\\.yml$"
      ],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+go: \"(?<currentValue>.*)\""
      ]
    },
    {
      "fileMatch": [
        "^test/kubernetes-test\\.sh$",
        "^test/packet/scripts/install\\.sh$",
        "^.github/actions/set-env-variables/action\\.yml$"
      ],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+.+_VERSION=\"(?<currentValue>.*)\""
      ]
    },
    {
      "fileMatch": [
        "^go\\.mod$"
      ],
      "matchStrings": [
        "// renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+go (?<currentValue>.*)"
      ]
    },
    {
      "fileMatch": [
        ".github/actions/kvstore/action.yaml"
      ],
      "matchStrings": [
        "default: (?<depName>.*?):(?<currentValue>.*?)@(?<currentDigest>.*?)\\s"
      ],
      "datasourceTemplate": "docker"
    }
  ],
  "rangeStrategy": "bump",
  "packageRules": [
    {
      "matchUpdateTypes": ["minor", "major","patch"],
      "groupName": "all-dependencies"
    }
  ]
}
