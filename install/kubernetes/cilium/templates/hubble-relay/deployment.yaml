{{- if .Values.hubble.relay.enabled }}

{{- /* Workaround so that we can set the minimal k8s version that we support */ -}}
{{- $k8sVersion := .Capabilities.KubeVersion.Version -}}
{{- $k8sMajor := .Capabilities.KubeVersion.Major -}}
{{- $k8sMinor := .Capabilities.KubeVersion.Minor -}}

{{- if .Values.Capabilities -}}
{{- if .Values.Capabilities.KubeVersion -}}
{{- if .Values.Capabilities.KubeVersion.Version -}}
{{- $k8sVersion = .Values.Capabilities.KubeVersion.Version -}}
{{- if .Values.Capabilities.KubeVersion.Major -}}
{{- $k8sMajor = toString (.Values.Capabilities.KubeVersion.Major) -}}
{{- if .Values.Capabilities.KubeVersion.Minor -}}
{{- $k8sMinor = toString (.Values.Capabilities.KubeVersion.Minor) -}}
{{- end -}}
{{- end -}}
{{- end -}}
{{- end -}}
{{- end -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  labels:
    k8s-app: hubble-relay
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.hubble.relay.replicas }}
  selector:
    matchLabels:
      k8s-app: hubble-relay
{{- with .Values.hubble.relay.updateStrategy }}
  strategy:
{{ toYaml .  | trim | indent 4 }}
{{- end }}
  template:
    metadata:
      annotations:
{{- if .Values.hubble.relay.rollOutPods }}
        # ensure pods roll when configmap updates
        cilium.io/hubble-relay-configmap-checksum: {{ include (print $.Template.BasePath "/hubble-relay-configmap.yaml") . | sha256sum | quote }}
{{- end }}
{{- with .Values.hubble.relay.podAnnotations }}
        {{- toYaml . | nindent 8 }}
{{- end }}
      labels:
        k8s-app: hubble-relay
{{- with .Values.hubble.relay.podLabels }}
        {{- toYaml . | nindent 8 }}
{{- end }}
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "k8s-app"
                  operator: In
                  values:
                    - cilium
            topologyKey: "kubernetes.io/hostname"
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
{{- end }}
      containers:
        - name: hubble-relay
          image: "{{ .Values.hubble.relay.image.repository }}:{{ .Values.hubble.relay.image.tag }}{{ if .Values.hubble.relay.image.useDigest }}@{{ .Values.hubble.relay.image.digest }}{{ end }}"
          imagePullPolicy: {{ .Values.hubble.relay.image.pullPolicy }}
          command:
            - hubble-relay
          args:
            - serve
{{- if .Values.debug.enabled }}
            - "--debug"
{{- end }}
          ports:
            - name: grpc
              containerPort: {{ .Values.hubble.relay.listenPort }}
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
{{- with .Values.hubble.relay.resources }}
          resources:
            {{- toYaml . | trim | nindent 12 }}
{{- end }}
          volumeMounts:
          - mountPath: {{ dir .Values.hubble.socketPath }}
            name: hubble-sock-dir
            readOnly: true
          - mountPath: /etc/hubble-relay
            name: config
            readOnly: true
{{- if .Values.hubble.tls.enabled }}
          - mountPath: /var/lib/hubble-relay/tls
            name: tls
            readOnly: true
{{- end }}
      restartPolicy: Always
{{- if and (or (and (eq .Release.Namespace "kube-system") (gt $k8sMinor "10")) (ge $k8sMinor "17") (gt $k8sMajor "1")) .Values.enableCriticalPriorityClass }}
      priorityClassName: system-cluster-critical
{{- end }}
      serviceAccount: {{ .Values.serviceAccounts.relay.name | quote }}
      serviceAccountName: {{ .Values.serviceAccounts.relay.name | quote }}
      terminationGracePeriodSeconds: 0
{{- with .Values.hubble.relay.nodeSelector }}
      nodeSelector:
        {{- toYaml . | trim | nindent 8 }}
{{- end }}
{{- with .Values.hubble.relay.tolerations }}
      tolerations:
      {{- toYaml . | trim | nindent 8 }}
{{- end }}
      volumes:
      - configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
        name: config
      - hostPath:
          path: {{ dir .Values.hubble.socketPath }}
          type: Directory
        name: hubble-sock-dir
{{- if .Values.hubble.tls.enabled }}
      - projected:
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
{{- if .Values.hubble.relay.tls.server.enabled }}
          - secret:
              name: hubble-relay-server-certs
              items:
                - key: tls.crt
                  path: server.crt
                - key: tls.key
                  path: server.key
{{- end }}
        name: tls
{{- end }}
{{- end }}
